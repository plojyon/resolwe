name: Resolwe CI

on:
  push:
    branches:
      - master
      - arc-runners # TODO: remove
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

  pull_request:
  schedule:
    - cron: "30 2 * * *"

jobs:
  test:
    env:
      # TOX_COMMAND: "RESOLWE_COMMUNICATOR_IMAGE=resolwe/com:testing python3.12 -m tox --skip-missing-interpreters false"
      TOX_COMMAND: "RESOLWE_COMMUNICATOR_IMAGE=resolwe/com:testing python3.11 -m tox --skip-missing-interpreters false"
      DOCKER_HOST: unix:///run/docker/docker.sock

    runs-on: arc-runner
    # timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: "3.10"
            toxenv: "py310"
          - python: "3.11"
            toxenv: "py311"
          - python: "3.11"
            toxenv: "linters"
          - python: "3.11"
            toxenv: "packaging"
          - python: "3.11"
            toxenv: "migrations"

    container:
      image: 342286153875.dkr.ecr.us-east-1.amazonaws.com/genialis/ci/arc-runner:latest
      env:
        DOCKER_HOST: ${{ env.DOCKER_HOST }}
        # RESOLWE_DOCKER_COMMAND: "sudo DOCKER_HOST=${{ env.DOCKER_HOST }} docker"
        RESOLWE_DOCKER_COMMAND: docker
        RESOLWE_REDIS_PORT: 6379
        RESOLWE_POSTGRESQL_HOST: postgres
        RESOLWE_POSTGRESQL_NAME: resolwe
        RESOLWE_POSTGRESQL_USER: resolwe
        RESOLWE_POSTGRESQL_PASS: resolwe
        RESOLWE_POSTGRESQL_PORT: 5432
      volumes:
        - /run/docker:/var/run/docker
        # Process executors must mount certain volumes, so the directories must be shared on the host.
        - /tmp:/tmp
        - /home/runner/_work:/home/runner/_work
      ports:
        # Listener ports must open to the docker host to be accessible to process containers.
        - 50000-50050:50000-50050
      credentials:
        username: AWS
        password: ${{ secrets.AWS_ECR_PASSWORD }}

    services:
      postgres: 
        image: postgres:14-alpine
        env:
          POSTGRES_USER: resolwe
          POSTGRES_DB: resolwe
          POSTGRES_PASSWORD: resolwe
        ports: 
          - 5432/tcp

      redis:
        image: redis:alpine
        ports: 
          - 6379/tcp

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build communication container
        working-directory: ./resolwe/flow/docker_images
        run: $RESOLWE_DOCKER_COMMAND build -f Dockerfile.communication -t resolwe/com:testing ../../

      - name: Get stuck
        run: |
          python3.11 -m pip install zmq
          if [ ${{ matrix.python }} == 3.10 ]; then touch lock; fi
          touch lock
          while [ -f lock ]; do
            sleep 10
          done

      - name: Tests
        run: |
          # This is the same directory as before, but the path must match
          # the one on the host, so new docker containers can mount files in it.
          cd /home/runner/_work/resolwe/resolwe
          ${{ env.TOX_COMMAND }} -e ${{ matrix.toxenv }}


  build:
    runs-on: ubuntu-22.04
    needs: test
    if: startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v4

      - name: Install build
        run: python3.12 -m pip install --user build

      - name: Build a binary wheel and a source tarball
        run: python3.12 -m build --sdist --wheel --outdir dist/ .

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_password }}
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: .coverage
  